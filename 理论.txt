Base64转码原理
	三个8Bit的字节转为四个6Bit的字节
	Base64转码过程
	1、字符串分字符
	2、转为ASCII十进制数字码
	3、转为二进制
	4、6个分组高位补两零
	5、转为ASCII十进制数字码
	6、转为字符并拼接字符串
编码
	ASCII
		8比特(bit)一字节(byte)
	Unicode(为了适应多国语言，中国GB2312，日本Shift_JIS，韩国Euc-kr)
		两个字节一个字符，非常偏僻的四个字节
	UTF-8
		来自于Unicode字符,常用英文一个字节，汉字通常是三个字节，生僻的字符4-6个字节
	注：在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。
		用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件。
		浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器。
		
	\u开头表示16进制的Unicode编码
	\x也表示16进制
	0x表示16进制
术语
	变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言(python是动态语言，java是静态语言)
	
事务的隔离级别
	1、read uncommitted(读取未提交的数据)
		一个事务读取了另一个事务未提交的数据
		注：又叫脏读，隔离级别最低的一种
	2、read committed(可读取其他事务提交的数据)
		一个事务只能读取另一个事务提交的数据
		注：又叫不可重复读，两次读取不一样
	3、repeatable read(可重读)
		在一个事务中每次读取的数据是一样的，不管有没有另一个事务修改或新增数据
		注：又叫幻读，MySQL默认的隔离级别
	4、serializable(串行化)
		在一个事务开启串行化时，另一个事务无法对数据库进行修改
		注：一个事务开启另一个事务被挂起，性能会受到影响
	总结：前三个
	参考：https://www.jianshu.com/p/4e3edbedb9a8
=======================================================================================
隔离级别	脏读（Dirty Read）	不可重复读（NonRepeatable Read）	幻读（Phantom Read） 
=======================================================================================
未提交读（Read uncommitted）		可能 			可能			可能
已提交读（Read committed）	  		不可能			可能			可能
可重复读（Repeatable read）			不可能			不可能			可能
可串行化（Serializable ）			不可能			不可能			不可能
=======================================================================================


	
	
	
	
	
	
