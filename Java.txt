java
	set无序不重复
	list有序重复
三种标准注解
@Override，表示当前的方法定义将覆盖超类中的方法。
@Deprecated，使用了注解为它的元素编译器将发出警告，因为注解@Deprecated是不赞成使用的代码，被弃用的代码。
@SuppressWarnings，关闭不当编译器警告信息。
四种元注解
@Retention 
@Target 
@Document 
@Inherited
注解的元素
	1、看起来就像接口的方法，
	2、唯一的区别在于可以为其制定默认值。
	3、没有元素的注解称为标记注解，
注解处理器
	原理：注解处理器就是通过反射机制获取被检查方法上的注解信息，然后根据注解元素的值进行特定的处理
标签处理器
父子容器
tomcat容器读取web.xml启动spring容器

ServletContextListener 监听器必须实现的接口
ContextLoaderListener spring的监听器，继承了ContextLoader（contextInitialized监听器初始化方法）
ServletContext web容器的（如tomcat）上下文
WebApplicationContext web应用上下文，代表spring容器，继承ApplicationContext，是个接口
1、ContextLoader 上下文加载类
	调用initWebApplicationContext方法初始化spring容器
		调用createWebApplicationContext方法创建spring容器
		调用configureAndRefreshWebApplicationContext方法加载配置文件并创建beans
		调用servletContext.setAttribute方法吧spring容器挂载到web容器
		
http协议缺陷
	只能由客户端发送
websocketx协议
	服务器可以主动向客户端推送信息（双向通话）
	没有同源限制
	使用
		发送 触发定义的ws.onopen=function(evt){ ws.send("...") }或 判断ws.readyState==ws.OPEN 调用ws.send("....")方法
		接收 触发定义的ws.onmessage=function (evt){ console.log(evt.data) }		
tomcat 
		host代表webapps
		context代表写的程序
		
maven构建
	1. 在eclipse 构建 web中关于java版本有三处需要修改统一。
		（1）在Java Build Path的libraries中修改
		（2）在Java Compiler 中修改
		（3）在Project Facet中修改
	2. 大部分按上上述修改就应该可以了，但总是有意外，还是报错。因为使用了 maven构建项目，因而最好在pom.xml文件中的build标签中加入以下代码：
		<build>
		  <plugins>
			   <plugin>
					 <groupId>org.apache.maven.plugins</groupId>
					 <artifactId>maven-compiler-plugin</artifactId>
					 <version>3.1</version>
					 <configuration>
						 <source>1.7</source>     //如果是1.8，修改为1.8
						 <target>1.7</target>      //如果是1.8，修改为1.8
					 </configuration>
			   </plugin>
		  </plugins>
		</build>
WebService
	使用 见 https://www.cnblogs.com/AlanLee/p/6933073.html
	webservice采用http协议传输数据，xml格式封装、发送、接受数据
	RPC远程调用协议
	webService平台技术（XML+XSD,SOAP,WSDL三大技术）
		1、XML+XSD（XSD=XML Schema）
			xml封装数据
			xsd定义数据类型
		2、SOAP协议
			soap(simple object access protocal简单对象访问协议)
			webservice增加了http头消息，以说明http消息的内容格式
			soap协议=http协议+xml数据格式
		3、WSDL语言
			wsdl(web服务描述语言)描述函数、参数、返回值
			根据wsdl生成相应的webservice的代理类代码
	1.通过wsimport生成代码
    2.通过客户端编程方式
    3.通过ajax调用方式
    4.通过 URL Connection 方式调用
	
	
	
	